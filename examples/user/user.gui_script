local rpg = require "gooey.themes.rpg.rpg"
local monarch = require "monarch.monarch"


local USER_TEXT = [[USER
Id: %s
Level: %d
Badge: %d
Logged on: %s
Behind NAT: %s
Phone: %s
2FA enabled: %s
]]


function init(self)
	msg.post(".", "acquire_input_focus")

	local status, error = pcall(steam.init)
	if not status then print("Error: " .. error) return end

	local user_id = steam.user_get_steam_id()
	local steam_level = steam.user_get_player_steam_level()
	local badge_level = steam.user_get_game_badge_level(1, true)
	local logged_on = steam.user_logged_on()
	local behind_nat = steam.user_is_behind_nat()
	local phone_status = (steam.user_is_phone_verified() and "VERIFIED")
	or (steam.user_is_phone_identifying() and "IDENTIFYING")
	or (steam.user_is_phone_requiring_verification() and "REQ.VERIFICATION")
	local two_factor_enabled = steam.user_is_two_factor_enabled()
	gui.set_text(gui.get_node("userinfo"), USER_TEXT:format(
		user_id,
		steam_level,
		badge_level,
		tostring(logged_on),
		tostring(behind_nat),
		tostring(phone_status),
		tostring(two_factor_enabled)
	))

	steam.set_listener(function(self, e, t)
		print("listener event", e)
		pprint(t)
	end)
end

function final(self)
	steam.final()
end

function update(self, dt)
	steam.update()
end

function on_input(self, action_id, action)
	rpg.button("back", action_id, action, function()
		monarch.back()
	end)

	rpg.button("get_auth_ticket", action_id, action, function()
		local ticket, err = steam.user_get_auth_session_ticket()
		if ticket then
			local hex = ticket:gsub(".", function(char)
				return string.format("%02X", char:byte())
			end)
			print("ticket", hex)
		else
			print("error", err)
		end
	end)
end