- name: steam
  type: table
  desc: Functions and constants for interacting with Steamworks.

  members:
  - name: init
    type: function
    desc: Initialize Steamworks. 
    returns:
    - name: success
      type: Boolean
      desc: True if successful
    - name: message
      type: String
      desc: Error message if unsuccessful.

  - name: update
    type: function
    desc: Update Steamworks. Call this from a script component.

  - name: restart
    type: function
    desc: Restart Steamworks. 
    parameters:
    - name: appid
      type: number

  - name: final
    type: function
    desc: Finalize Steamworks. 

  - name: EFloatingGamepadTextInputModeModeSingleLine
    type: number
    desc: Enter dismisses the keyboard

  - name: EFloatingGamepadTextInputModeModeMultipleLines
    type: number
    desc: User needs to explicitly dismiss the keyboard

  - name: EFloatingGamepadTextInputModeModeEmail
    type: number
    desc: Keyboard is displayed in a special mode that makes it easier to enter emails

  - name: EFloatingGamepadTextInputModeModeNumeric
    type: number
    desc: Numeric keypad is shown

  - name: EGamepadTextInputModeNormal
    type: number
    desc: Normal text input

  - name: EGamepadTextInputModePassword
    type: number
    desc: Password text input

  - name: EGamepadTextInputLineModeSingleLine
    type: number
    desc: Single line text

  - name: EGamepadTextInputLineModeMultipleLines
    type: number
    desc: Multi line text

  - name: ELeaderboardDataRequestGlobal
    type: number
    desc: Requests rows in the leaderboard from the full table 

  - name: ELeaderboardDataRequestGlobalAroundUser
    type: number
    desc: Requests rows in the leaderboard from rows around the user 

  - name: ELeaderboardDataRequestFriends
    type: number
    desc: Requests all the rows for friends of the current user 

  - name: ELeaderboardSortMethodNone
    type: number
    desc: 

  - name: ELeaderboardSortMethodAscending
    type: number
    desc: Top-score is lowest number 

  - name: ELeaderboardSortMethodDescending
    type: number
    desc: Top-score is highest number 

  - name: ELeaderboardUploadScoreMethodNone
    type: number
    desc: 

  - name: ELeaderboardUploadScoreMethodKeepBest
    type: number
    desc: Leaderboard will keep user&#x27;s best score 

  - name: ELeaderboardUploadScoreMethodForceUpdate
    type: number
    desc: Leaderboard will always replace score with specified 

  - name: ELeaderboardDisplayTypeNone
    type: number
    desc: 

  - name: ELeaderboardDisplayTypeNumeric
    type: number
    desc: Simple numerical score 

  - name: ELeaderboardDisplayTypeTimeSeconds
    type: number
    desc: The score represents a time, in seconds 

  - name: ELeaderboardDisplayTypeTimeMilliSeconds
    type: number
    desc: The score represents a time, in milliseconds 

  - name: EOverlayToStoreFlag_None
    type: number
    desc: Passed as parameter to the store 

  - name: EOverlayToStoreFlag_AddToCart
    type: number
    desc: Passed as parameter to the store 

  - name: EOverlayToStoreFlag_AddToCartAndShow
    type: number
    desc: Passed as parameter to the store 

  - name: EActivateGameOverlayToWebPageMode_Default
    type: number
    desc: Passed as parameter to ActivateGameOverlayToWebPage 

  - name: EActivateGameOverlayToWebPageMode_Modal
    type: number
    desc: Passed as parameter to ActivateGameOverlayToWebPage 

  - name: EPersonaStateOffline
    type: number
    desc: Friend is not currently logged on 

  - name: EPersonaStateOnline
    type: number
    desc: Friend is logged on 

  - name: EPersonaStateBusy
    type: number
    desc: User is on, but busy 

  - name: EPersonaStateAway
    type: number
    desc: Auto-away feature 

  - name: EPersonaStateSnooze
    type: number
    desc: Auto-away for a long time 

  - name: EPersonaStateLookingToTrade
    type: number
    desc: Online, trading 

  - name: EPersonaStateLookingToPlay
    type: number
    desc: Online, wanting to play 

  - name: EPersonaStateInvisible
    type: number
    desc: Online, but appears offline to friends.  This status is never published to clients. 

  - name: EFriendFlagNone
    type: number
    desc: EFriendFlagNone

  - name: EFriendFlagBlocked
    type: number
    desc: EFriendFlagBlocked

  - name: EFriendFlagFriendshipRequested
    type: number
    desc: EFriendFlagFriendshipRequested

  - name: EFriendFlagImmediate
    type: number
    desc: EFriendFlagImmediate

  - name: EFriendFlagClanMember
    type: number
    desc: EFriendFlagClanMember

  - name: EFriendFlagOnGameServer
    type: number
    desc: EFriendFlagOnGameServer

  - name: EFriendFlagRequestingFriendship
    type: number
    desc: EFriendFlagRequestingFriendship

  - name: EFriendFlagRequestingInfo
    type: number
    desc: EFriendFlagRequestingInfo

  - name: EFriendFlagIgnored
    type: number
    desc: EFriendFlagIgnored

  - name: EFriendFlagIgnoredFriend
    type: number
    desc: EFriendFlagIgnoredFriend

  - name: EFriendFlagChatMember
    type: number
    desc: EFriendFlagChatMember

  - name: EFriendFlagAll
    type: number
    desc: EFriendFlagAll

  - name: SteamNetworkingSend_Unreliable
    type: number
    desc: SteamNetworkingSend_Unreliable

  - name: SteamNetworkingSend_NoNagle
    type: number
    desc: SteamNetworkingSend_NoNagle

  - name: SteamNetworkingSend_UnreliableNoNagle
    type: number
    desc: SteamNetworkingSend_UnreliableNoNagle

  - name: SteamNetworkingSend_NoDelay
    type: number
    desc: SteamNetworkingSend_NoDelay

  - name: SteamNetworkingSend_UnreliableNoDelay
    type: number
    desc: SteamNetworkingSend_UnreliableNoDelay

  - name: SteamNetworkingSend_Reliable
    type: number
    desc: SteamNetworkingSend_Reliable

  - name: SteamNetworkingSend_ReliableNoNagle
    type: number
    desc: SteamNetworkingSend_ReliableNoNagle

  - name: SteamNetworkingSend_UseCurrentThread
    type: number
    desc: SteamNetworkingSend_UseCurrentThread

  - name: SteamNetworkingSend_AutoRestartBrokenSession
    type: number
    desc: SteamNetworkingSend_AutoRestartBrokenSession

  - name: ESteamNetConnectionEnd_Invalid
    type: number
    desc: ESteamNetConnectionEnd_Invalid

  - name: ESteamNetConnectionEnd_App_Generic
    type: number
    desc: ESteamNetConnectionEnd_App_Generic

  - name: ESteamNetConnectionEnd_AppException_Generic
    type: number
    desc: ESteamNetConnectionEnd_AppException_Generic

  - name: ESteamNetConnectionEnd_Local_OfflineMode
    type: number
    desc: ESteamNetConnectionEnd_Local_OfflineMode

  - name: ESteamNetConnectionEnd_Local_ManyRelayConnectivity
    type: number
    desc: ESteamNetConnectionEnd_Local_ManyRelayConnectivity

  - name: ESteamNetConnectionEnd_Local_HostedServerPrimaryRelay
    type: number
    desc: ESteamNetConnectionEnd_Local_HostedServerPrimaryRelay

  - name: ESteamNetConnectionEnd_Local_NetworkConfig
    type: number
    desc: ESteamNetConnectionEnd_Local_NetworkConfig

  - name: ESteamNetConnectionEnd_Local_Rights
    type: number
    desc: ESteamNetConnectionEnd_Local_Rights

  - name: ESteamNetConnectionEnd_Local_P2P_ICE_NoPublicAddresses
    type: number
    desc: ESteamNetConnectionEnd_Local_P2P_ICE_NoPublicAddresses

  - name: ESteamNetConnectionEnd_Remote_Timeout
    type: number
    desc: ESteamNetConnectionEnd_Remote_Timeout

  - name: ESteamNetConnectionEnd_Remote_BadCrypt
    type: number
    desc: ESteamNetConnectionEnd_Remote_BadCrypt

  - name: ESteamNetConnectionEnd_Remote_BadCert
    type: number
    desc: ESteamNetConnectionEnd_Remote_BadCert

  - name: ESteamNetConnectionEnd_Remote_BadProtocolVersion
    type: number
    desc: ESteamNetConnectionEnd_Remote_BadProtocolVersion

  - name: ESteamNetConnectionEnd_Remote_P2P_ICE_NoPublicAddresses
    type: number
    desc: ESteamNetConnectionEnd_Remote_P2P_ICE_NoPublicAddresses

  - name: ESteamNetConnectionEnd_Misc_Generic
    type: number
    desc: ESteamNetConnectionEnd_Misc_Generic

  - name: ESteamNetConnectionEnd_Misc_InternalError
    type: number
    desc: ESteamNetConnectionEnd_Misc_InternalError

  - name: ESteamNetConnectionEnd_Misc_Timeout
    type: number
    desc: ESteamNetConnectionEnd_Misc_Timeout

  - name: ESteamNetConnectionEnd_Misc_SteamConnectivity
    type: number
    desc: ESteamNetConnectionEnd_Misc_SteamConnectivity

  - name: ESteamNetConnectionEnd_Misc_NoRelaySessionsToClient
    type: number
    desc: ESteamNetConnectionEnd_Misc_NoRelaySessionsToClient

  - name: ESteamNetConnectionEnd_Misc_P2P_Rendezvous
    type: number
    desc: ESteamNetConnectionEnd_Misc_P2P_Rendezvous

  - name: ESteamNetConnectionEnd_Misc_P2P_NAT_Firewall
    type: number
    desc: ESteamNetConnectionEnd_Misc_P2P_NAT_Firewall

  - name: ESteamNetConnectionEnd_Misc_PeerSentNoConnection
    type: number
    desc: ESteamNetConnectionEnd_Misc_PeerSentNoConnection

  - name: ESteamNetworkingConnectionState_None
    type: number
    desc: ESteamNetworkingConnectionState_None

  - name: ESteamNetworkingConnectionState_Connecting
    type: number
    desc: ESteamNetworkingConnectionState_Connecting

  - name: ESteamNetworkingConnectionState_FindingRoute
    type: number
    desc: ESteamNetworkingConnectionState_FindingRoute

  - name: ESteamNetworkingConnectionState_Connected
    type: number
    desc: ESteamNetworkingConnectionState_Connected

  - name: ESteamNetworkingConnectionState_ClosedByPeer
    type: number
    desc: ESteamNetworkingConnectionState_ClosedByPeer

  - name: ESteamNetworkingConnectionState_ProblemDetectedLocally
    type: number
    desc: ESteamNetworkingConnectionState_ProblemDetectedLocally

  - name: ELobbyTypePrivate
    type: number
    desc: ELobbyTypePrivate only way to join the lobby is to invite to someone else

  - name: ELobbyTypeFriendsOnly
    type: number
    desc: ELobbyTypeFriendsOnly shows for friends or invitees, but not in lobby list

  - name: ELobbyTypePublic
    type: number
    desc: ELobbyTypePublic visible for friends and in lobby list

  - name: ELobbyTypeInvisible
    type: number
    desc: ELobbyTypeInvisible returned by search, but not visible to other friends

  - name: ELobbyTypePrivateUnique
    type: number
    desc: ELobbyTypePrivateUnique private, unique and does not delete when empty

  - name: apps_is_dlc_installed
    type: function
    desc: Takes AppID of DLC and checks if the user owns the DLC &amp; if the DLC is installed. 
    parameters:
    - name: app_id
      type: number
    returns:
    - name: installed
      type: bool

  - name: friends_get_friend_persona_name
    type: function
    desc: Returns the name of another user. Same rules as GetFriendPersonaState() apply as to whether or not the user knowns the name of the other user note that on first joining a lobby, chat room or game server the local user will not known the name of the other users automatically; that information will arrive asyncronously.
    parameters:
    - name: CSteamID
      type: friendId
    returns:
    - name: String
      type: name
      desc: Name of user

  - name: friends_get_persona_name
    type: function
    desc: Returns the local players name - guaranteed to not be NULL. This is the same name as on the users community profile page. This is stored in UTF-8 format.
    returns:
    - name: String
      type: name
      desc: Name of user

  - name: friends_get_persona_state
    type: function
    desc: Gets the status of the current user. Returned as EPersonaState.
    returns:
    - name: Number
      type: state
      desc: Status of user.

  - name: friends_get_friend_count
    type: function
    desc: Friend iteration. Takes a set of EFriendFlags, and returns the number of users the client knows about who meet that criteria. Then GetFriendByIndex() can then be used to return the id's of each of those users.
    parameters:
    - name: iFriendFlags
      type: number
      desc: Set of friend flags to match friends against.
    returns:
    - name: Number
      type: count
      desc: Number of users matching search.

  - name: friends_get_friend_by_index
    type: function
    desc: Returns the steamID of a user. The returned CSteamID can then be used by all the functions below to access details about the user.
    parameters:
    - name: iFriend
      type: number
      desc: Is a index of range [0, GetFriendCount())
    - name: iFriendsFlags
      type: number
      desc: Must be the same value as used in GetFriendCount()
    returns:
    - name: Number
      type: steamID
      desc: Steam id of the user

  - name: friends_get_friend_persona_state
    type: function
    desc: Returns the current status of the specified user. This will only be known by the local user if steamIDFriend is in their friends list; on the same game server; in a chat room or lobby; or in a small group with the local user.
    parameters:
    - name: steamIDFriend
      type: number
      desc: Id of friend
    returns:
    - name: Number
      type: state
      desc: State of friend

  - name: friends_get_friend_steam_level
    type: function
    desc: Get friends steam level. 
    parameters:
    - name: steamIDFriend
      type: number
      desc: Id of friend
    returns:
    - name: Number
      type: level
      desc: Steam level of friend

  - name: friends_get_friend_relationship
    type: function
    desc: Returns a relationship to a user. 
    parameters:
    - name: steamIDFriend
      type: number
      desc: Id of friend
    returns:
    - name: Number
      type: relationship
      desc: Relationship to the user.

  - name: friends_activate_game_overlay_to_store
    type: function
    desc: Activates game overlay to store page for app. 
    parameters:
    - name: app_id
      type: number
    - name: flag
      type: number
      desc: EOverlayToStoreFlag

  - name: friends_activate_game_overlay_to_web_page
    type: function
    desc: Activates game overlay web browser directly to the specified URL. Full address with protocol type is required, e.g. http://www.steamgames.com/
    parameters:
    - name: url
      type: string
    - name: mode
      type: number
      desc: EActivateGameOverlayToWebPageMode

  - name: friends_set_rich_presence
    type: function
    desc: Sets a Rich Presence key/value for the current user. 
    parameters:
    - name: key
      type: string
    - name: value
      type: string
    returns:
    - name: success
      type: bool
      desc: True if the rich presence was set successfully, otherwise False.

  - name: friends_clear_rich_presence
    type: function
    desc: Clears all of the current user&#x27;s Rich Presence key/values. 

  - name: friends_invite_user_to_game
    type: function
    desc: Invites a friend or clan member to the current game using a special invite string. If the target accepts the invite, a GameRichPresenceJoinRequested_t callback is posted containing the connect string.
    parameters:
    - name: steamIDFriend
      type: number
      desc: Id of friend
    - name: connect
      type: string
      desc: String
    returns:
    - name: success
      type: boolean

  - name: set_listener
    type: function
    desc: Set a listener. 
    parameters:
    - name: listener
      type: function
      desc: Listener function to call

  - name: matchmaking_add_request_lobby_list_string_filter
    type: function
    desc: Adds a string comparison filter to the next RequestLobbyList call. 
    parameters:
    - name: key
      type: string
    - name: value
      type: number
    - name: cmp
      type: number

  - name: matchmaking_add_request_lobby_list_numerical_filter
    type: function
    desc: Adds a numerical comparison filter to the next RequestLobbyList call. 
    parameters:
    - name: key
      type: string
    - name: value
      type: number
    - name: cmp
      type: number

  - name: matchmaking_add_request_lobby_list_near_value_filter
    type: function
    desc: Sorts the results closest to the specified value. 
    parameters:
    - name: key
      type: string
    - name: value
      type: number

  - name: matchmaking_add_request_lobby_list_filter_slots_available
    type: function
    desc: Filters to only return lobbies with the specified number of open slots Available.
    parameters:
    - name: slots
      type: number

  - name: matchmaking_add_request_lobby_list_distance_filter
    type: function
    desc: Sets the physical distance for which we should search for lobbies, this is Based on the users IP address and a IP location map on the Steam backed.
    parameters:
    - name: dist
      type: number

  - name: matchmaking_add_request_lobby_list_result_count_filter
    type: function
    desc: Sets the maximum number of lobbies to return. The lower the count the faster It is to download the lobby results & details to the client.
    parameters:
    - name: max_count
      type: number

  - name: matchmaking_add_request_lobby_list_compatible_members_filter
    type: function
    desc: Unused - Checks the player compatibility based on the frenemy system. 
    parameters:
    - name: steam_id
      type: string

  - name: matchmaking_request_lobby_list
    type: function
    desc: Get a filtered list of relevant lobbies. Will return results as a LobbyMatchList_t event
    returns:
    - name: Callback
      type: string
      desc: Id

  - name: matchmaking_get_lobby_by_index
    type: function
    desc: Gets the Steam ID of the lobby at the specified index. This should only be called after a LobbyMatchList_t call result is received LobbyMatchList_t.m_nLobbiesMatching
    parameters:
    - name: index
      type: number
      desc: The index of the lobby to get the Steam ID of, from 0 to
    returns:
    - name: Id
      type: string
      desc: Of lobby

  - name: matchmaking_create_lobby
    type: function
    desc: Create a new matchmaking lobby. Will generate a LobbyCreated_t, LobbyEnter_t and LobbyDataUpdate_t event
    parameters:
    - name: lobby_type
      type: number
      desc: The type and visibility of this lobby.
    - name: max_members
      type: number
      desc: The maximum number of players that can join this lobby.
    returns:
    - name: Callback
      type: string
      desc: Id

  - name: matchmaking_join_lobby
    type: function
    desc: Joins an existing lobby. Will generate a LobbyEnter_t event
    parameters:
    - name: lobby_id
      type: string
      desc: The Steam ID of the lobby to join.
    returns:
    - name: Callback
      type: string
      desc: Id

  - name: matchmaking_leave_lobby
    type: function
    desc: Leave a lobby that the user is currently in Leave a lobby that the user is currently in; this will take effect immediately on the client side, other users in the lobby will be notified by a LobbyChatUpdate_t callback.
    parameters:
    - name: lobby_id
      type: string
      desc: The lobby to leave

  - name: matchmaking_get_lobby_owner
    type: function
    desc: Returns the current lobby owner. There always one lobby owner - if the current owner leaves, another user in the lobby will become the owner automatically. It is possible (but rare) to join a lobby just as the owner is leaving, thus entering a lobby with self as the owner. You must be a member of the lobby to access this.
    parameters:
    - name: lobby_id
      type: string
      desc: The Steam ID of the lobby to get the owner of.
    returns:
    - name: Id
      type: string
      desc: Of owner

  - name: matchmaking_set_lobby_owner
    type: function
    desc: Changes who the lobby owner is. This can only be set by the owner of the lobby. This will trigger a LobbyDataUpdate_t for all of the users in the lobby, each user should update their local state to reflect the new owner. This is typically accomplished by displaying a crown icon next to the owners name.
    parameters:
    - name: lobby_id
      type: string
      desc: The Steam ID of the lobby to get the owner of.
    - name: new_owner
      type: string
      desc: The new owner

  - name: matchmaking_set_lobby_type
    type: function
    desc: Updates what type of lobby this is. This is also set when you create the lobby with CreateLobby. This can only be set by the owner of the lobby.
    parameters:
    - name: lobby_id
      type: string
      desc: The Steam ID of the lobby
    - name: type
      type: number
      desc: The lobby type

  - name: matchmaking_set_lobby_joinable
    type: function
    desc: Sets whether or not a lobby is joinable by other players. This always defaults to enabled for a new lobby. If joining is disabled, then no players can join, even if they are a friend or have been invited. Lobbies with joining disabled will not be returned from a lobby search.
    parameters:
    - name: lobby_id
      type: string
      desc: The Steam ID of the lobby
    - name: joinable
      type: boolean
      desc: Enable or disable allowing users to join this lobby?
    returns:
    - name: Success
      type: boolean

  - name: matchmaking_set_lobby_member_limit
    type: function
    desc: Set the maximum number of players that can join the lobby. This is also set when you create the lobby with CreateLobby. This can only be set by the owner of the lobby. can not be above 250.
    parameters:
    - name: lobby_id
      type: string
      desc: The Steam ID of the lobby to set the member limit for.
    - name: max_members
      type: number
      desc: The maximum number of players allowed in this lobby. This
    returns:
    - name: Success
      type: boolean

  - name: matchmaking_get_lobby_member_limit
    type: function
    desc: The current limit on the # of users who can join the lobby. 
    parameters:
    - name: lobby_id
      type: string
      desc: The Steam ID of the lobby to get the member limit of.
    returns:
    - name: Limit
      type: number

  - name: matchmaking_get_num_lobby_members
    type: function
    desc: Gets the number of users in a lobby. This is used for iteration, after calling this then GetLobbyMemberByIndex can be used to get the Steam ID of each person in the lobby. Persona information for other lobby members (name, avatar, etc.) is automatically received and accessible via the ISteamFriends interface. The current user must be in the lobby to retrieve the Steam IDs of other users in that lobby.
    parameters:
    - name: lobby_id
      type: string
      desc: The Steam ID of the lobby to get the owner of.
    returns:
    - name: Number
      type: number
      desc: Of users in the lobby

  - name: matchmaking_get_lobby_member_by_index
    type: function
    desc: Gets the Steam ID of the lobby member at the given index. You must call matchmaking_get_num_lobby_members before calling this. The current user must be in the lobby to retrieve the Steam IDs of other users in that lobby.
    parameters:
    - name: lobby_id
      type: string
    - name: index
      type: number
    returns:
    - name: Id
      type: string
      desc: Of member

  - name: matchmaking_set_lobby_data
    type: function
    desc: Sets a key/value pair in the lobby metadata 
    parameters:
    - name: lobby_id
      type: string
    - name: key
      type: string
    - name: data
      type: string
    returns:
    - name: result
      type: boolean

  - name: matchmaking_set_lobby_member_data
    type: function
    desc: Sets per-user metadata for the local user. 
    parameters:
    - name: lobby_id
      type: string
    - name: key
      type: string
    - name: data
      type: string

  - name: matchmaking_get_lobby_data
    type: function
    desc: Get data associated with this lobby. 
    parameters:
    - name: lobby_id
      type: string
    - name: key
      type: string
    returns:
    - name: Data
      type: string

  - name: matchmaking_get_lobby_member_data
    type: function
    desc: Gets per-user metadata from another player in the specified lobby. 
    parameters:
    - name: lobby_id
      type: string
    - name: user_id
      type: string
    - name: key
      type: string
    returns:
    - name: Data
      type: string

  - name: matchmaking_get_lobby_data_count
    type: function
    desc: Returns the number of metadata keys set on the specified lobby 
    parameters:
    - name: lobby_id
      type: string
    returns:
    - name: Number
      type: number
      desc: Of keys

  - name: matchmaking_get_lobby_data_by_index
    type: function
    desc: Returns a lobby metadata key/values pair by index 
    parameters:
    - name: lobby_id
      type: string
    - name: index
      type: number
    returns:
    - name: success
      type: boolean
    - name: key
      type: string
    - name: value
      type: string

  - name: matchmaking_send_lobby_chat_message
    type: function
    desc: Broadcasts a chat message to the all the users in the lobby 
    parameters:
    - name: lobby_id
      type: string
    - name: body
      type: string
    returns:
    - name: success
      type: boolean

  - name: matchmaking_get_lobby_chat_entry
    type: function
    desc: Get a chat message as specified in a LobbyChatMsg_t callback 
    parameters:
    - name: lobby_id
      type: string
    - name: index
      type: number
    returns:
    - name: a
      type: dat
    - name: e
      type: typ

  - name: networking_send_message_to_user
    type: function
    desc: Send message 
    parameters:
    - name: identity_remote
      type: string
    - name: data
      type: string
    - name: send_flags
      type: number
      desc: A bitmask of k_nSteamNetworkingSend_xxx options
    - name: remote_channel
      type: number
      desc: A routing number you can use to help route message to different systems

  - name: networking_receive_messages_on_channel
    type: function
    desc: Receive message 
    parameters:
    - name: localChannel
      type: number
    returns:
    - name: message
      type: table

  - name: networking_accept_session_with_user
    type: function
    desc: Accept session Call this in response to a SteamNetworkingMessagesSessionRequest_t callback. pending or otherwise. If there is an existing active session, this function will return true, even if it is not pending.
    parameters:
    - name: identity_remote
      type: string
    returns:
    - name: result
      type: boolean
      desc: Returns false if there is no session with the user

  - name: networking_close_session_with_user
    type: function
    desc: Close sesssion Call this when you're done talking to a user to immediately free up resources under-the-hood
    parameters:
    - name: identity_remote
      type: string
    returns:
    - name: result
      type: boolean

  - name: networking_close_channel_with_user
    type: function
    desc: Close channel Call this when you're done talking to a user on a specific channel.
    parameters:
    - name: identity_remote
      type: string
    - name: local_channel
      type: number
    returns:
    - name: result
      type: boolean

  - name: networking_get_session_connection_info
    type: function
    desc: Get connection info Returns information about the latest state of a connection, if any, with the given peer.
    parameters:
    - name: identity_remote
      type: string
    returns:
    - name: info
      type: table
      desc: Connection info (state, info, status)

  - name: remote_storage_file_share
    type: function
    desc: Share a file 
    parameters:
    - name: filename
      type: string
      desc: Name of file to share
    returns:
    - name: call
      type: string
      desc: Id

  - name: remote_storage_get_file_count
    type: function
    desc: Get number of uploaded files 
    returns:
    - name: File
      type: number
      desc: Count

  - name: remote_storage_get_file_name_and_size
    type: function
    desc: Get file information 
    returns:
    - name: File
      type: number
      desc: Count

  - name: remote_storage_get_quota
    type: function
    desc: Get storage quota 
    returns:
    - name: Available
      type: number
      desc: Bytes
    - name: Total
      type: number
      desc: Bytes

  - name: remote_storage_file_write
    type: function
    desc: Creates a new file, writes the bytes to the file, and then closes the file. If the target file already exists, it is overwritten.
    parameters:
    - name: filename
      type: string
      desc: The name of the file to write to.
    - name: data
      type: string
    returns:
    - name: Success
      type: boolean

  - name: remote_storage_file_read
    type: function
    desc: Opens a binary file, reads the contents of the file into a byte array, And then closes the file.
    parameters:
    - name: filename
      type: string
      desc: Name of the file to read from
    returns:
    - name: data
      type: string

  - name: user_get_steam_id
    type: function
    desc: Returns the CSteamID of the account currently logged into the Steam client. A CSteamID is a unique identifier for an account, and used to differentiate users in all parts of the Steamworks API.
    returns:
    - name: id
      type: CSteamID

  - name: user_get_player_steam_level
    type: function
    desc: Gets the Steam Level of the user, as shown on their profile. 
    returns:
    - name: level
      type: number

  - name: user_get_game_badge_level
    type: function
    desc: Trading Card badges data access. If you only have one set of cards, the series will be 1. The user has can have two different badges for a series; the regular (max level 5) and the foil (max level 1).
    returns:
    - name: series
      type: number
    - name: foil
      type: boolean

  - name: user_logged_on
    type: function
    desc: Returns true if the Steam client current has a live connection to the Steam Servers.
    returns:
    - name: logged_on
      type: boolean

  - name: user_is_behind_nat
    type: function
    desc: Returns true if this users looks like they are behind a NAT device. Only valid once the user has connected to steam .
    returns:
    - name: behind_nat
      type: boolean

  - name: user_is_phone_verified
    type: function
    desc: Gets whether the users phone number is verified. 
    returns:
    - name: verified
      type: boolean

  - name: user_is_phone_identifying
    type: function
    desc: Gets whether the users phone number is identifying. 
    returns:
    - name: verifying
      type: boolean

  - name: user_is_phone_requiring_verification
    type: function
    desc: Gets whether the users phone number is awaiting (re)verification. 
    returns:
    - name: verification
      type: boolean

  - name: user_is_two_factor_enabled
    type: function
    desc: Gets whether the user has two factor enabled on their account. 
    returns:
    - name: enabled
      type: boolean

  - name: user_get_auth_session_ticket
    type: function
    desc: Get an authentication ticket. Retrieve an authentication ticket to be sent to the entity who wishes to authenticate you.
    returns:
    - name: ticket
      type: string
      desc: Or null
    - name: error
      type: string
      desc: Or null

  - name: user_stats_get_stat_int
    type: function
    desc: Get user stat as an integer. Https://partner.steamgames.com/doc/api/ISteamUserStats#GetStat
    parameters:
    - name: id
      type: string
      desc: Id of the stat to get
    returns:
    - name: Boolean
      type: ok
    - name: Number
      type: stat
      desc: The stat or nil

  - name: user_stats_set_stat_int
    type: function
    desc: Set user stat. Https://partner.steamgames.com/doc/api/ISteamUserStats#SetStat
    parameters:
    - name: id
      type: string
      desc: Id of the stat to set
    - name: stat
      type: number
      desc: Number to set
    returns:
    - name: ok
      type: boolean

  - name: user_stats_get_stat_float
    type: function
    desc: Get user stat as a floating point number. Https://partner.steamgames.com/doc/api/ISteamUserStats#GetStat
    parameters:
    - name: id
      type: string
      desc: Id of the stat to get
    returns:
    - name: ok
      type: Boolean
    - name: stat
      type: Number
      desc: The stat

  - name: user_stats_set_stat_float
    type: function
    desc: Set user stat. Https://partner.steamgames.com/doc/api/ISteamUserStats#SetStat
    parameters:
    - name: id
      type: string
      desc: Id of the stat to set
    - name: stat
      type: number
      desc: Number to set
    returns:
    - name: ok
      type: Boolean

  - name: user_stats_request_global_stats
    type: function
    desc: Requests global stats data, which is available for stats marked as &quot;aggregated&quot;. This call is asynchronous, with the results returned in GlobalStatsReceived_t. nHistoryDays specifies how many days of day-by-day history to retrieve in addition to the overall totals. The limit is 60. https://partner.steamgames.com/doc/api/ISteamUserStats#RequestGlobalStats
    parameters:
    - name: history_days
      type: number
    returns:
    - name: ok
      type: Boolean

  - name: user_stats_store_stats
    type: function
    desc: Store the current data on the server. Will get a callback when set and one callback for every new achievement  If the callback has a result of k_EResultInvalidParam, one or more stats uploaded has been rejected, either because they broke constraints or were out of date. In this case the server sends back updated values. The stats should be re-iterated to keep in sync. https://partner.steamgames.com/doc/api/ISteamUserStats#StoreStats
    returns:
    - name: ok
      type: Boolean

  - name: user_stats_reset_all_stats
    type: function
    desc: Reset stats. Https://partner.steamgames.com/doc/api/ISteamUserStats#ResetAllStats
    parameters:
    - name: achievements
      type: boolean
      desc: True if achievements should be reset as well.
    returns:
    - name: ok
      type: Boolean

  - name: user_stats_set_achievement
    type: function
    desc: Set achievement. Https://partner.steamgames.com/doc/api/ISteamUserStats#SetAchievement
    parameters:
    - name: name
      type: string
    returns:
    - name: ok
      type: Boolean

  - name: user_stats_get_achievement
    type: function
    desc: Get achievement. Https://partner.steamgames.com/doc/api/ISteamUserStats#GetAchievement
    parameters:
    - name: name
      type: string
    returns:
    - name: ok
      type: Boolean
    - name: achieved
      type: Boolean

  - name: user_stats_clear_achievement
    type: function
    desc: Clear achievement. Https://partner.steamgames.com/doc/api/ISteamUserStats#ClearAchievement
    parameters:
    - name: name
      type: string
    returns:
    - name: ok
      type: Boolean

  - name: user_stats_get_num_achievements
    type: function
    desc: Used for iterating achievements. In general games should not need these functions because they should have a list of existing achievements compiled into them. https://partner.steamgames.com/doc/api/ISteamUserStats#GetNumAchievements
    returns:
    - name: num
      type: Number
      desc: Number of achievements.

  - name: user_stats_get_achievement_name
    type: function
    desc: Get achievement name iAchievement in [0,GetNumAchievements) Https://partner.steamgames.com/doc/api/ISteamUserStats#GetAchievementName
    parameters:
    - name: index
      type: number
    returns:
    - name: name
      type: String

  - name: user_stats_get_achievement_display_attribute
    type: function
    desc: Get general attributes for an achievement. Accepts the following keys * "name" and "desc" for retrieving the localized achievement name and description (returned in UTF8) * "hidden" for retrieving if an achievement is hidden (returns "0" when not hidden, "1" when hidden) https://partner.steamgames.com/doc/api/ISteamUserStats#GetAchievementDisplayAttribute
    parameters:
    - name: name
      type: string
    - name: key
      type: string
      desc: Either "name", "desc" or "hidden"
    returns:
    - name: attribute
      type: String

  - name: user_stats_get_achievement_achieved_percent
    type: function
    desc: Returns the percentage of users who have achieved the specified achievement. Https://partner.steamgames.com/doc/api/ISteamUserStats#GetAchievementAchievedPercent
    returns:
    - name: ok
      type: Boolean
    - name: percent
      type: Number

  - name: user_stats_find_leaderboard
    type: function
    desc: Find a leaderboard. Will return leaderboard asynchronously. https://partner.steamgames.com/doc/api/ISteamUserStats#FindLeaderboard
    parameters:
    - name: name
      type: string

  - name: user_stats_find_or_create_leaderboard
    type: function
    desc: Gets a leaderboard by name, it will create it if it&#x27;s not yet created. This call is asynchronous, with the result returned in a listener callback with event set to LeaderboardFindResult_t. https://partner.steamgames.com/doc/api/ISteamUserStats#FindOrCreateLeaderboard
    parameters:
    - name: leaderboard_name
      type: string
      desc: The name of the leaderboard to find or create.
    - name: eLeaderboardSortMethod
      type: ELeaderboardSortMethod
      desc: The sort order of the new leaderboard if it's created.
    - name: eLeaderboardDisplayType
      type: ELeaderboardDisplayType
      desc: The display type (used by the Steam Community web site) of the new leaderboard if it's created.

  - name: user_stats_get_leaderboard_name
    type: function
    desc: Get the name of a leaderboard. Https://partner.steamgames.com/doc/api/ISteamUserStats#GetLeaderboardName
    parameters:
    - name: leaderboard
      type: string
    returns:
    - name: name
      type: string

  - name: user_stats_get_leaderboard_entry_count
    type: function
    desc: Get the total number of entries in a leaderboard, as of the last request. Https://partner.steamgames.com/doc/api/ISteamUserStats#GetLeaderboardEntryCount
    parameters:
    - name: leaderboard
      type: string
    returns:
    - name: count
      type: number

  - name: user_stats_get_leaderboard_sort_method
    type: function
    desc: Returns the sort method of the leaderboard Https://partner.steamgames.com/doc/api/ISteamUserStats#GetLeaderboardSortMethod
    parameters:
    - name: leaderboard
      type: string
    returns:
    - name: sort
      type: number
      desc: Order

  - name: user_stats_get_leaderboard_display_type
    type: function
    desc: Returns the display type of a leaderboard handle. Https://partner.steamgames.com/doc/api/ISteamUserStats#GetLeaderboardDisplayType
    parameters:
    - name: leaderboard
      type: string
    returns:
    - name: display
      type: number
      desc: Type

  - name: user_stats_download_leaderboard_entries
    type: function
    desc: Asks the Steam back-end for a set of rows in the leaderboard. This call is asynchronous, with the result returned in a listener callback with event set to LeaderboardScoresDownloaded_t. LeaderboardScoresDownloaded_t will contain a handle to pull the results from GetDownloadedLeaderboardEntries(). You can ask for more entries than exist, and it will return as many as do exist. * k_ELeaderboardDataRequestGlobal requests rows in the leaderboard from the full table, with nRangeStart & nRangeEnd in the range [1, TotalEntries] * k_ELeaderboardDataRequestGlobalAroundUser requests rows around the current user, nRangeStart being negate e.g. DownloadLeaderboardEntries( hLeaderboard, k_ELeaderboardDataRequestGlobalAroundUser, -3, 3 ) will return 7 rows, 3 before the user, 3 after * k_ELeaderboardDataRequestFriends requests all the rows for friends of the current user https://partner.steamgames.com/doc/api/ISteamUserStats#DownloadLeaderboardEntries
    parameters:
    - name: leaderboard
      type: string
    - name: request
      type: ELeaderboardDataRequest
    - name: start
      type: number
    - name: end
      type: number

  - name: user_stats_get_downloaded_leaderboard_entry
    type: function
    desc: Returns data about a single leaderboard entry Https://partner.steamgames.com/doc/api/ISteamUserStats#GetDownloadedLeaderboardEntry
    parameters:
    - name: hSteamLeaderboardEntries
      type: string
      desc: Leaderboard entries handle
    - name: index
      type: number
      desc: Which entry to get
    returns:
    - name: ok
      type: Boolean
    - name: entry
      type: Table
      desc: The requested leaderboard entry.

  - name: user_stats_upload_leaderboard_score
    type: function
    desc: Uploads a user score to a specified leaderboard. This call is asynchronous, with the result returned in a listener callback with event set to LeaderboardScoreUploaded_t. https://partner.steamgames.com/doc/api/ISteamUserStats#UploadLeaderboardScore
    parameters:
    - name: leaderboard
      type: string
    - name: eLeaderboardUploadScoreMethod
      type: ELeaderboardUploadScoreMethod
    - name: nScore
      type: number

  - name: user_stats_attach_leadboard_ugc
    type: function
    desc: Attaches a piece of user generated content the current user&#x27;s entry on a Leaderboard. https://partner.steamgames.com/doc/api/ISteamUserStats#AttachLeaderboardUGC
    parameters:
    - name: leaderboard
      type: string
    - name: ugc_handle
      type: string
    returns:
    - name: Steam
      type: string
      desc: API call id

  - name: utils_get_app_id
    type: function
    desc: Returns the appID of the current process. 
    returns:
    - name: app_id
      type: Number

  - name: utils_get_seconds_since_app_active
    type: function
    desc: Return the number of seconds since the user. 
    returns:
    - name: seconds
      type: Number

  - name: utils_is_steam_running_on_steam_deck
    type: function
    desc: Returns true if currently running on the Steam Deck device. 
    returns:
    - name: running_on_steamdeck
      type: Boolean

  - name: utils_get_image_size
    type: function
    desc: Get size of image 
    parameters:
    - name: image
      type: number
      desc: Image handle
    returns:
    - name: ok
      type: Boolean
      desc: True if size of image was read successfully
    - name: width
      type: Number
      desc: Image width or nil
    - name: height
      type: Number
      desc: Image height or nil

  - name: utils_get_image_rgba
    type: function
    desc: Get image in RGBA format. 
    parameters:
    - name: image
      type: number
      desc: Image handle
    - name: size
      type: number
      desc: Size of image
    returns:
    - name: ok
      type: Boolean
      desc: True if size of image was read successfully
    - name: Image
      type: String

  - name: utils_get_server_real_time
    type: function
    desc: Returns the Steam server time in Unix epoch format. (Number of seconds since Jan 1, 1970 UTC) 
    returns:
    - name: Server
      type: number
      desc: Time

  - name: utils_show_floating_gamepad_text_input
    type: function
    desc: Opens a floating keyboard over the game content and sends OS keyboard keys directly to the game. 
    parameters:
    - name: mode
      type: number
      desc: EFloatingGamepadTextInputMode
    - name: x
      type: number
      desc: Text field x position
    - name: y
      type: number
      desc: Text field y position
    - name: width
      type: number
      desc: Text field width
    - name: height
      type: number
      desc: Text field height
    returns:
    - name: result
      type: bool
      desc: True if the floating keyboard was shown, otherwise, false.

  - name: utils_show_gamepad_text_input
    type: function
    desc: Activates the Big Picture text input dialog which only supports gamepad input. 
    parameters:
    - name: input_mode
      type: number
      desc: EGamepadTextInputMode
    - name: line_input_mode
      type: number
      desc: EGamepadTextInputLineMode
    - name: description
      type: string
      desc: Sets the description that should inform the user what the input dialog is for
    - name: existing_text
      type: string
      desc: Sets the preexisting text which the user can edit.
    returns:
    - name: result
      type: bool
      desc: True if the big picture overlay is running; otherwise, false

